#BlueJ class context
comment0.target=Rectangulo
comment0.text=\r\n\ Permite\ definir\ un\ rect\u00E1ngulo\ en\ un\ plano\ cartesiano,\r\n\ usando\ como\ referencia\ el\ punto\ de\ su\ esquina\ inferior\ izquierda\ (origen),\r\n\ junto\ con\ las\ dimensiones\ ancho\ y\ alto.\r\n\ \r\n\ Incluye\ operaciones\ para\ calcular\ superficie,\ per\u00EDmetro,\r\n\ desplazar\ el\ rect\u00E1ngulo,\ determinar\ el\ mayor\ entre\ dos\ rect\u00E1ngulos,\r\n\ y\ calcular\ la\ distancia\ entre\ dos\ rect\u00E1ngulos.\r\n\ \r\n\ @author\ Cespedes\ Ivo\r\n\ @version\ 1\r\n
comment1.params=p_origen\ p_ancho\ p_alto
comment1.target=Rectangulo(Punto,\ double,\ double)
comment1.text=\r\n\ Constructor\ que\ crea\ un\ rect\u00E1ngulo\ en\ un\ punto\ espec\u00EDfico.\r\n\ \r\n\ @param\ p_origen\ punto\ de\ origen\ (esquina\ inferior\ izquierda)\r\n\ @param\ p_ancho\ ancho\ del\ rect\u00E1ngulo\r\n\ @param\ p_alto\ alto\ del\ rect\u00E1ngulo\r\n
comment10.params=
comment10.target=double\ superficie()
comment10.text=\r\n\ Calcula\ y\ devuelve\ la\ superficie\ del\ rect\u00E1ngulo.\r\n\ \r\n\ @return\ valor\ de\ tipo\ double\ representando\ el\ \u00E1rea\r\n
comment11.params=
comment11.target=double\ perimetro()
comment11.text=\r\n\ Calcula\ y\ devuelve\ el\ per\u00EDmetro\ del\ rect\u00E1ngulo.\r\n\ \r\n\ @return\ valor\ de\ tipo\ double\ representando\ el\ per\u00EDmetro\r\n
comment12.params=
comment12.target=void\ caracteristicas()
comment12.text=\r\n\ Muestra\ en\ pantalla\ todas\ las\ caracter\u00EDsticas\ del\ rect\u00E1ngulo,\r\n\ incluyendo\ origen,\ ancho,\ alto,\ superficie\ y\ per\u00EDmetro.\r\n
comment13.params=otroRectangulo
comment13.target=double\ distanciaA(Rectangulo)
comment13.text=\r\n\ Calcula\ la\ distancia\ entre\ este\ rect\u00E1ngulo\ y\ otro\ rect\u00E1ngulo,\r\n\ medida\ como\ la\ distancia\ entre\ sus\ puntos\ de\ origen.\r\n\ \r\n\ @param\ otroRectangulo\ otro\ rect\u00E1ngulo\ a\ comparar\r\n\ @return\ valor\ de\ tipo\ double\ representando\ la\ distancia\r\n
comment14.params=otroRectangulo
comment14.target=Rectangulo\ elMayor(Rectangulo)
comment14.text=\r\n\ Determina\ cu\u00E1l\ de\ los\ dos\ rect\u00E1ngulos\ tiene\ mayor\ superficie.\r\n\ \r\n\ @param\ otroRectangulo\ otro\ rect\u00E1ngulo\ a\ comparar\r\n\ @return\ el\ rect\u00E1ngulo\ con\ mayor\ superficie\r\n
comment2.params=p_ancho\ p_alto
comment2.target=Rectangulo(double,\ double)
comment2.text=\r\n\ Constructor\ que\ crea\ un\ rect\u00E1ngulo\ en\ el\ origen\ (0,0).\r\n\ \r\n\ @param\ p_ancho\ ancho\ del\ rect\u00E1ngulo\r\n\ @param\ p_alto\ alto\ del\ rect\u00E1ngulo\r\n
comment3.params=p_origen
comment3.target=void\ setOrigen(Punto)
comment3.text=\r\n\ Asigna\ un\ nuevo\ punto\ de\ origen\ al\ rect\u00E1ngulo.\r\n\ \r\n\ @param\ p_origen\ punto\ de\ origen\r\n
comment4.params=p_ancho
comment4.target=void\ setAncho(double)
comment4.text=\r\n\ Asigna\ un\ nuevo\ ancho\ al\ rect\u00E1ngulo.\r\n\ \r\n\ @param\ p_ancho\ ancho\ del\ rect\u00E1ngulo\r\n
comment5.params=p_alto
comment5.target=void\ setAlto(double)
comment5.text=\r\n\ Asigna\ un\ nuevo\ alto\ al\ rect\u00E1ngulo.\r\n\ \r\n\ @param\ p_alto\ alto\ del\ rect\u00E1ngulo\r\n
comment6.params=
comment6.target=double\ getAncho()
comment6.text=\r\n\ Devuelve\ el\ ancho\ del\ rect\u00E1ngulo.\r\n\ \r\n\ @return\ valor\ de\ tipo\ double\r\n
comment7.params=
comment7.target=double\ getAlto()
comment7.text=\r\n\ Devuelve\ el\ alto\ del\ rect\u00E1ngulo.\r\n\ \r\n\ @return\ valor\ de\ tipo\ double\r\n
comment8.params=
comment8.target=Punto\ getOrigen()
comment8.text=\r\n\ Devuelve\ el\ punto\ de\ origen\ (esquina\ inferior\ izquierda).\r\n\ \r\n\ @return\ objeto\ Punto\r\n
comment9.params=p_dx\ p_dy
comment9.target=void\ desplazar(double,\ double)
comment9.text=\r\n\ Desplaza\ el\ rect\u00E1ngulo\ trasladando\ su\ punto\ de\ origen.\r\n\ \r\n\ @param\ p_dx\ desplazamiento\ en\ el\ eje\ X\r\n\ @param\ p_dy\ desplazamiento\ en\ el\ eje\ Y\r\n
numComments=15
